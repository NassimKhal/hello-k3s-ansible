name: Ansible Provisioning

on:
  push:
    branches: [main]
    paths:
      - 'ansible/**'
      - 'kubernetes/**'

jobs:
  provision:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_CI_KEY }}

      - name: Fetch EC2 IP from Terraform Cloud Output
        uses: paambaati/tfc-output-action@v1.0.8
        id: tfc-output
        with:
          apiToken: ${{ secrets.TF_API_TOKEN }}
          workspaceId: ws-kcEEUwPhAyDuzShM
          variableName: 'ec2_public_ip'

      - name: Exit if EC2 IP is not available
        if: ${{ steps.tfc-output.outputs.value == '' }}
        run: |
          echo "No EC2 instance available. Exiting..."
          exit 0

      - name: Create dynamic Ansible inventory
        run: |
          mkdir -p ansible
          echo "[flask_server]" > ansible/inventory.ini
          echo "${{ steps.tfc-output.outputs.value }} ansible_user=ubuntu" >> ansible/inventory.ini

      - name: Detect changed files and set Ansible tags
        id: changes
        run: |
          git fetch origin main
          CHANGED=$(git diff --name-only origin/main...HEAD)

          TAGS=""
          if echo "$CHANGED" | grep -q "^ansible/"; then
            TAGS="install"
          fi
          if echo "$CHANGED" | grep -q "^kubernetes/"; then
            if [[ "$TAGS" == "install" ]]; then
              TAGS="install,deploy"
            else
              TAGS="deploy"
            fi
          fi

          echo "tags=$TAGS" >> $GITHUB_OUTPUT
          echo "Detected tags: $TAGS"

      - name: Run Ansible Playbook with detected tags
        if: ${{ steps.changes.outputs.tags != '' }}
        working-directory: ansible
        run: |
          ansible-playbook -i inventory.ini playbook.yml --tags "${{ steps.changes.outputs.tags }}"

      - name: Skip playbook (no relevant changes)
        if: ${{ steps.changes.outputs.tags == '' }}
        run: echo "No Ansible-related changes detected. Skipping playbook run."
