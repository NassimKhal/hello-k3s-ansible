---
- name: Provision EC2 instance with Docker, k3s, and deploy Flask app
  hosts: flask_server
  become: yes

  tasks:

    - name: Check if instance is already provisioned
      tags: always
      stat:
        path: /etc/provisioned_by_ansible
      register: provisioned_status

    - name: Install Docker and enable service
      tags: install
      when: not provisioned_status.stat.exists
      block:
        - name: Install Docker
          apt:
            name: docker.io
            state: present
            update_cache: yes

        - name: Enable Docker service
          systemd:
            name: docker
            enabled: yes
            state: started

    - name: Install k3s
      tags: k3s
      when: not provisioned_status.stat.exists
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Wait for k3s to be ready
      tags: k3s
      when: not provisioned_status.stat.exists
      shell: |
        until k3s kubectl get nodes; do sleep 5; done

    - name: Mark instance as provisioned
      tags: install
      when: not provisioned_status.stat.exists
      file:
        path: /etc/provisioned_by_ansible
        state: touch

    - name: Copy Kubernetes manifests to the remote server
      tags: deploy
      copy:
        src: "../kubernetes/"
        dest: /tmp/
        mode: '0644'

    - name: Apply Kubernetes Deployment
      tags: deploy
      shell: sudo k3s kubectl apply -f /tmp/flask-deployment.yaml

    - name: Apply Kubernetes Service
      tags: deploy
      shell: sudo k3s kubectl apply -f /tmp/flask-service.yaml

    - name: Clean up manifest files
      tags: deploy
      file:
        path: "/tmp/{{ item }}"
        state: absent
      loop:
        - flask-deployment.yaml
        - flask-service.yaml
