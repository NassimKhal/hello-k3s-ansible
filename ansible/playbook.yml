---
- hosts: flask_server
  become: yes  # Run tasks with sudo privileges

  tasks:
    - name: Update package cache (apt-get update)
      apt:
        update_cache: yes

    - name: Install prerequisite packages
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Dockerâ€™s official GPG key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
        sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      args:
        creates: /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Set up Docker repository
      shell: |
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
        https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Install Docker Engine
      apt:
        update_cache: yes
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Verify Docker Compose installation
      shell: docker-compose --version
      register: docker_compose_version

    - name: Output Docker Compose version
      debug:
        var: docker_compose_version.stdout

    # k3s installation tasks clearly simplified...

    - name: Download and Install k3s
      shell: |
        curl -sfL https://get.k3s.io | sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Wait for k3s service to start
      pause:
        seconds: 20  # Wait clearly for k3s to start fully (simple and effective)

    - name: Check k3s service status clearly
      shell: systemctl is-active k3s
      register: k3s_status
      changed_when: false

    - name: Ensure k3s is running (verify clearly)
      assert:
        that:
          - "'active' in k3s_status.stdout"
        fail_msg: "k3s service is not running clearly."

    - name: Check k3s nodes (get status clearly)
      shell: /usr/local/bin/k3s kubectl get nodes
      register: k3s_nodes

    - name: Output k3s nodes status
      debug:
        var: k3s_nodes.stdout
    - name: Copy Kubernetes manifests clearly to the remote server
      copy:
        src: "../kubernetes/"
        dest: "/home/ubuntu/kubernetes"
        mode: '0644'

    - name: Deploy Flask application to k3s Kubernetes cluster (deployment & service)
      shell: |
        sudo k3s kubectl apply -f /home/ubuntu/kubernetes/flask-deployment.yaml
        sudo k3s kubectl apply -f /home/ubuntu/kubernetes/flask-service.yaml
      args:
        executable: /bin/bash
      
