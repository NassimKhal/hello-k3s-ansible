name: Ansible Provisioning

on:
  push:
    branches:
      - main
    paths:
      - 'ansible/**'
      - 'kubernetes/**'

jobs:
  ansible-run:
    name: Run Ansible Playbook
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch EC2 Public IP from Terraform Cloud
        id: tfc-output
        uses: paambaati/tfc-output-action@v1.0.8
        with:
          apiToken: ${{ secrets.TF_API_TOKEN }}
          workspaceId: ws-kcEEUwPhAyDuzShM
          variableName: 'ec2_public_ip'

      - name: Check if EC2 IP is available
        id: check-ip
        run: |
          ip="${{ steps.tfc-output.outputs.value }}"
          echo "EC2 IP: $ip"
          if [ -z "$ip" ]; then
            echo "No EC2 instance detected. Exiting."
            exit 0
          fi
          echo "ip=$ip" >> $GITHUB_ENV

      - name: Create dynamic Ansible inventory
        run: |
          mkdir -p ansible
          echo "[flask_server]" > ansible/inventory.ini
          echo "$ip ansible_user=ubuntu" >> ansible/inventory.ini

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY_CI }}

      - name: Wait for SSH to be Ready
        run: |
          echo "Waiting for SSH on $ip..."
          for i in {1..20}; do
            if ssh -o StrictHostKeyChecking=no ubuntu@$ip 'echo SSH is up'; then
              echo "SSH is ready!"
              break
            fi
            sleep 10
          done

      - name: Run Ansible Playbook
        working-directory: ansible
        run: |
          ansible-playbook -i inventory.ini playbook.yml
