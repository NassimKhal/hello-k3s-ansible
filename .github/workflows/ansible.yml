name: Ansible Provisioning and Kubernetes Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'ansible/**'
      - 'kubernetes/**'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::539247494423:role/GitHubActionsOIDCRole
          aws-region: us-east-1

      - name: Fetch remote value from Terraform
        uses: paambaati/tfc-output-action@v1.0.8
        id: tfc-output
        with:
          apiToken: ${{ secrets.TF_API_TOKEN }}
          workspaceId: ws-kcEEUwPhAyDuzShM
          variableName: 'ec2_public_ip'

      - name: Print the value
        run: echo "IP is ${{ steps.tfc-output.outputs.value }}"

      - name: Create dynamic inventory.ini
        run: |
          mkdir -p ansible
          echo "[flask_server]" > ansible/inventory.ini
          echo "${{ steps.tf_output.outputs.ec2_public_ip }}" >> ansible/inventory.ini

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Wait for SSH to be Ready
        run: |
          ip="${{ steps.tf_output.outputs.ec2_ip }}"
          echo "Waiting for SSH on $ip..."
          for i in {1..20}; do
            if ssh -o StrictHostKeyChecking=no ec2-user@$ip 'echo SSH is up'; then
              echo "SSH is ready!"
              break
            fi
            sleep 10
          done

      - name: Run Ansible Playbook
        working-directory: ansible
        run: ansible-playbook -i inventory.ini playbook.yml
